<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    namespace：必须与对应的接口全类名一致
    id:必须与对应接口的某个对应的方法名一致

 -->
<mapper namespace="ltd.cracks.service.front.user.UserDao">

    <resultMap id="User" type="ltd.cracks.service.front.user.User">
        <id column="user_id" property="id" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="BIGINT"/>
        <result column="user_age" property="age" jdbcType="VARCHAR"/>
        <result column="insertTime" property="insertTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <parameterMap id="User" type="ltd.cracks.service.front.user.User">
        <parameter property="id" jdbcType="BIGINT"/>
        <parameter property="userName" jdbcType="VARCHAR"/>
        <parameter property="age" jdbcType="VARCHAR"/>
        <parameter property="insertTime" jdbcType="TIMESTAMP" />
    </parameterMap>

    <insert id="save" parameterMap="User">
        insert into t_user(user_name,user_age, insertTime) values(#{userName},#{age}, #{insertTime})
    </insert>

    <update id="update" parameterMap="User">
        update t_user set user_name=#{userName},user_age=#{age} where user_id=#{id}
    </update>

    <delete id="delete" parameterType="int">
        delete from t_user where user_id=#{id}
    </delete>

    <!-- mybsits_config中配置的alias类别名,也可直接配置resultType为类路劲 -->
    <select id="findById" parameterType="int" resultMap="User">
        select * from t_user where user_id=#{id}
    </select>

    <select id="findAll" resultMap="User">
        select user_id id,user_name userName,user_age age from t_user
    </select>

</mapper>